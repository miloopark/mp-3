{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport function useCalculator() {\n  _s();\n  const [num1, setNum1] = useState(\"\");\n  const [num2, setNum2] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  function calculate(operation) {\n    if (operation === 'clear') {\n      setNum1(\"\");\n      setNum2(\"\");\n      setResult(\"\");\n      return;\n    }\n    const n1 = parseFloat(num1);\n    const n2 = parseFloat(num2);\n    if (isNaN(n1) || isNaN(n2)) {\n      setResult(\"Invalid input\");\n      return;\n    }\n    let res;\n    switch (operation) {\n      case '+':\n        res = n1 + n2;\n        break;\n      case '-':\n        res = n1 - n2;\n        break;\n      case '*':\n        res = n1 * n2;\n        break;\n      case '/':\n        res = n2 !== 0 ? n1 / n2 : \"Error\";\n        break;\n      case '**':\n        // power using a for loop\n        res = 1;\n        for (let i = 0; i < n2; i++) {\n          res *= n1;\n        }\n        break;\n      default:\n        res = \"Unknown operation\";\n    }\n    setResult(res);\n  }\n  return {\n    num1,\n    setNum1,\n    num2,\n    setNum2,\n    result,\n    calculate\n  };\n}\n_s(useCalculator, \"Bz3dEV3ieyXQGmZk0MPCOPAZxDM=\");","map":{"version":3,"names":["useState","useCalculator","_s","num1","setNum1","num2","setNum2","result","setResult","calculate","operation","n1","parseFloat","n2","isNaN","res","i"],"sources":["/Users/minpark/Desktop/mp-3/src/calculator/useCalculator.js"],"sourcesContent":["import { useState } from 'react';\n\nexport function useCalculator() {\n  const [num1, setNum1] = useState(\"\");\n  const [num2, setNum2] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  function calculate(operation) {\n    if (operation === 'clear') {\n      setNum1(\"\");\n      setNum2(\"\");\n      setResult(\"\");\n      return;\n    }\n    const n1 = parseFloat(num1);\n    const n2 = parseFloat(num2);\n\n    if (isNaN(n1) || isNaN(n2)) {\n      setResult(\"Invalid input\");\n      return;\n    }\n\n    let res;\n    switch (operation) {\n      case '+':\n        res = n1 + n2;\n        break;\n      case '-':\n        res = n1 - n2;\n        break;\n      case '*':\n        res = n1 * n2;\n        break;\n      case '/':\n        res = n2 !== 0 ? n1 / n2 : \"Error\";\n        break;\n      case '**':\n        // power using a for loop\n        res = 1;\n        for (let i = 0; i < n2; i++) {\n          res *= n1;\n        }\n        break;\n      default:\n        res = \"Unknown operation\";\n    }\n    setResult(res);\n  }\n\n  return {\n    num1, setNum1,\n    num2, setNum2,\n    result,\n    calculate\n  };\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,SAASS,SAASA,CAACC,SAAS,EAAE;IAC5B,IAAIA,SAAS,KAAK,OAAO,EAAE;MACzBN,OAAO,CAAC,EAAE,CAAC;MACXE,OAAO,CAAC,EAAE,CAAC;MACXE,SAAS,CAAC,EAAE,CAAC;MACb;IACF;IACA,MAAMG,EAAE,GAAGC,UAAU,CAACT,IAAI,CAAC;IAC3B,MAAMU,EAAE,GAAGD,UAAU,CAACP,IAAI,CAAC;IAE3B,IAAIS,KAAK,CAACH,EAAE,CAAC,IAAIG,KAAK,CAACD,EAAE,CAAC,EAAE;MAC1BL,SAAS,CAAC,eAAe,CAAC;MAC1B;IACF;IAEA,IAAIO,GAAG;IACP,QAAQL,SAAS;MACf,KAAK,GAAG;QACNK,GAAG,GAAGJ,EAAE,GAAGE,EAAE;QACb;MACF,KAAK,GAAG;QACNE,GAAG,GAAGJ,EAAE,GAAGE,EAAE;QACb;MACF,KAAK,GAAG;QACNE,GAAG,GAAGJ,EAAE,GAAGE,EAAE;QACb;MACF,KAAK,GAAG;QACNE,GAAG,GAAGF,EAAE,KAAK,CAAC,GAAGF,EAAE,GAAGE,EAAE,GAAG,OAAO;QAClC;MACF,KAAK,IAAI;QACP;QACAE,GAAG,GAAG,CAAC;QACP,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,EAAE,EAAEG,CAAC,EAAE,EAAE;UAC3BD,GAAG,IAAIJ,EAAE;QACX;QACA;MACF;QACEI,GAAG,GAAG,mBAAmB;IAC7B;IACAP,SAAS,CAACO,GAAG,CAAC;EAChB;EAEA,OAAO;IACLZ,IAAI;IAAEC,OAAO;IACbC,IAAI;IAAEC,OAAO;IACbC,MAAM;IACNE;EACF,CAAC;AACH;AAACP,EAAA,CArDeD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}